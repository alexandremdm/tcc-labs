apiVersion: apps/v1
kind: Deployment
metadata:
  name: events-processor
  namespace: espfog-services
spec:
  replicas: 1
  selector:
    matchLabels:
      app: events-processor
  template:
    metadata:
      labels:
        app: events-processor
      annotations:  # <-- CORREÇÃO: Indentado corretamente sob 'metadata'
        prometheus.io/scrape: "true"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port: "8080"
    spec: # <-- Este 'spec' agora está no mesmo nível de 'metadata' dentro de 'template'
      hostAliases:
      - ip: 192.168.122.136
        hostnames:
        - kafka-1
      - ip: 192.168.122.121
        hostnames:
        - kafka-2
      - ip: 192.168.122.69
        hostnames:
        - kafka-3
      containers:
        - name: events-processor
          image: docker-vm:8085/docker-hosted/events-processor:latest
          ports:
            - containerPort: 8080
          resources:
            requests:
              memory: "256Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 10
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 10

---
apiVersion: v1
kind: Service
metadata:
  name: events-processor
  namespace: espfog-services
spec:
  selector:
    app: events-processor
  ports:
    - name: http-metrics
      protocol: TCP
      port: 8080
      targetPort: 8080
